type Item {
  id: ID!
  sku: String!
  price: Float!
}

type Cart {
  id: ID!
  items: [Item!]!
  total: Float
}

type Invoice {
  id: ID!
  items: [Item!]!
  total: Float
  status: InvoiceState
}

type Query {
  items: [Item!]!
  cart: Cart!
  invoices: [Invoice!]!
  invoice(invoice_id: ID!): Invoice!
}

input NewItem {
  sku: String!
  price: Float!
}

type Mutation {
  createItem(item: NewItem!): Item!
  addItemToCart(sku: String!): Cart!
  checkout(cart_id: ID! = 1): Invoice!
  confirmPurchase(invoice_id: ID!, confirm: Boolean! = true): String!
}

enum InvoiceState {
	Pending
  Canceled
  Paid
  Completed
}